---
title: Run tests
order: 70
---


{{< include ../_blocks/_clone_repo.qmd >}}
{{< include ../_blocks/_output_details.qmd >}}

### Unit test a component

By default there are 2 unit tests already done when running the `viash test`:

* The first test will check if the config file has all the required fields.
* The second test will generally test if your component works and if the out has the expected dimensions and fields.

You can find an in-depth guide on viash testing [here](https://viash.io/guide/component/unit-testing.html).

Use `viash test` to run all of the component's unit tests.

```bash
viash test src/label_projection/methods/knn/config.vsh.yaml
```
<details>
  <summary>Output</summary>
```{bash}
#| echo: false
viash test src/label_projection/methods/knn/config.vsh.yaml
```
</details>

### Unit test task components

Use `viash ns test` to unit test all of the components of a given task.

```bash
viash ns test --query label_projection --parallel --platform docker
```

<details>
  <summary>Output</summary>
                  namespace        functionality             platform            test_name exit_code duration               result
    label_projection/methods  logistic_regression               docker                start                                        
    label_projection/methods               scanvi               docker                start                                        
    label_projection/methods                  knn               docker                start                                        
    label_projection/methods                  mlp               docker                start                                        
    label_projection/metrics             accuracy               docker                start                                        
    label_projection/metrics                   f1               docker                start
    label_projection/methods  logistic_regression               docker     build_executable         0        4              SUCCESS
    label_projection/methods  logistic_regression               docker      generic_test.py         0        9              SUCCESS
    label_projection/metrics                   f1               docker     build_executable         0        7              SUCCESS
    label_projection/metrics                   f1               docker      format_check.py         0        8              SUCCESS
    label_projection/metrics             accuracy               docker     build_executable         0        8              SUCCESS
    label_projection/metrics             accuracy               docker      format_check.py         0        7              SUCCESS
    ...
</details>

## Common errors


1. assertion error

2. test script error

3. script error
```bash
Traceback (most recent call last):
  File "/viash_automount/tmp/viash_test_knn8482744173130031159/test_generic_test/tmp//viash-run-knn-V7rFbs.py", line 45, in <module>
    out = subprocess.check_output(cmd).decode("utf-8")
  File "/usr/local/lib/python3.10/subprocess.py", line 421, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/usr/local/lib/python3.10/subprocess.py", line 526, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['/viash_automount/tmp/viash_test_knn8482744173130031159/test_generic_test/knn', '--input_train', '/viash_automount/tmp/viash_test_knn8482744173130031159/test_generic_test//pancreas/train.h5ad', '--input_test', '/viash_automount/tmp/viash_test_knn8482744173130031159/test_generic_test//pancreas/test_wrong.h5ad', '--output', 'output.h5ad']' returned non-zero exit status 1.
```
whenever you see this error make sure that all the parameters are correct. If not sure you can go to the test script and change the line that has following code:
```python
subprocess.run(cmd, check=True)
```
to
```python
print(subprocess.run(cmd, stderr=subprocess.STDOUT).stdout)
```
Running the `viash test` again will give you an output of the executed script. That will give you an idea what went wrong:

```bash
+/tmp/viash_test_knn15835562876927731077/test_generic_test/test_executable
[error] Input file '/viash_automount/tmp/viash_test_knn15835562876927731077/test_generic_test//pancreas/test_wrong.h5ad' does not exist.
>> Running script as test
None
>> Checking whether output file exists
Traceback (most recent call last):
  File "/viash_automount/tmp/viash_test_knn15835562876927731077/test_generic_test/tmp//viash-run-knn-ZI0VGu.py", line 48, in <module>
    assert path.exists(output_path)
AssertionError
```
